apiVersion: v1
kind: Pod
metadata: 
  name: my-pod
  labels:
    app: my-app
  namespace: prod
spec:
  containers:
    - name: httpd
      image: httpd:latest
      ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
    - name: tomcat
      image: tomcat
      ports:
        - name: java
          containerPort: 8080


---
apiVersion: v1
kind: Service 
metadata:
  name: my-svc
spec:
  ports:
  - targetPort: 8080
    port: 8080
    protocal: TCP
    name: java 
selectors:
  app: my-app      

---

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-rs
  labels:
    app: my-app
spec:
  replicas: 3
  selector:
  #  matchLabels:

   #    app: myapp
     matchExpressions:

       - {key: app, operator: In, values: [my-app]}
  template:    #pod template
    metadata:
      labels:
        app: my-app

    spec:
      containers:
        - name: my-rc-cont
          image: nginx:latest
          ports:
           - containerPort: 80


apiVersion: v1 
kind: apiVersion: v1
kind: Pod
metadata:
  name: "MYAPP"
  namespace: default
  labels:
    app: "MYAPP"
spec:
  containers:
  - name: MYAPP
    image: "debian-slim:latest"
    resources:
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 200Mi
    env:
    - name: DB_HOST
      valueFrom:
        configMapKeyRef:
          name: MYAPP
          key: DB_HOST
    ports:
    - containerPort:  80
      name:  http
    volumeMounts:
    - name: localtime
      mountPath: /etc/localtime
  volumes:
    - name: localtime
      hostPath:
        path: /usr/share/zoneinfo/Asia/Shanghai
  restartPolicy: Always
